OK, well I got seriously sidetracked by the damned authentication process of GS,
There is no access to product page un-authenticated!
they wont allow the normal python authentication methods (like urllib auth)
copying the cookies didn't work
the only thing the lets you load the page is litterally copying over the header of the http request from the browser to a text file and then using this to override python's "requests" headers.
Using any kind of unrecognized POST requests will get you blocked, so login could be difficult

So this is what we'll have to do:

It probably needs to come from the same IP address, ie, your firefox browser needs the same IP address as the scrapper, so yes, use a proxy!

Open firefox, login to GS and go to a product page.
open the firefox console by pressing Ctrl+Shift+K
Go to network and reload the page.
scroll back up again and find the first get request, click it to open the sidebar, and inside there locate headers and click raw headers.

Copy the request headers to ./tmp/ff_headers.txt

=================================================

OK, well the search results (catalog) page doesn't contain relevant data
IE http://www.globalspec.com/search/products?page=ms#sqid=19041002&comp=2940&show=products

It instead populates this with the contents of a json request to 

http://www.globalspec.com/Search/GetProductResults?sqid=19041002&comp=2940&show=products&origWebHitId=471275866&method=getNewResults

The keys are:
sqid - Get this from the sqid of the first url
comp - Get this again from the original request name
WebHitId - this is in the page's <span id="webhit">

So we need to take the original url, extract the sqid and comp arguments
fetch the page, extract WebHitId, and generate a request to the json url.

Then we need to harvest that for more catalogs or products (it contains both)


==============================================================


1. http://www.globalspec.com/search/products?page=ms#sqid=19041002&comp=2940&show=products
Audio Amplifiers and Preamplifiers

Source of data is 
http://www.globalspec.com/Search/GetProductResults?sqid=19041002&comp=2940&show=products&origWebHitId=475202962&method=getNewResults

Links to 
2. http://www.globalspec.com/search/products?page=mi#sqid=19041002&comp=2940&vid=335701
Catalog of 16 products (4691830)
Soure of data is 
http://www.globalspec.com/Search/GetSupplierResults?sqid=19041002&comp=2940&vid=335701&origWebHitId=475234156&method=getNewResults

Links to product with product ID
---
OK, initially, It looks like if the original url has a ?vid= it is a "leaf node" and only contains products
Additinally, the source of the data is /Search/GetSupplierResults

If there isn't a ?vid= in the URL it's a stem node, It could have both more catalogs and products,
The source of the data is in /Search/GetProductResults?

&pg= controls pagination, where &pg=0 is the first page

if vendor id (vid) exists, it is a page of a vendor, we should already have it right? 
Wrong! Only some of the vendors have a proper vendor page, this doesn't for example
http://www.globalspec.com/supplier/profile/VisualSound (No "products catalog" here, but exists from within industrial directory structure)


